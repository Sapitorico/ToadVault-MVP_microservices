# This Docker Compose file defines a set of services for a microservices architecture.
# It includes services for MongoDB, ZooKeeper, Kafka, and various API services.

networks:
  ev:
    name: "ev"
    driver: bridge

services:
  # MongoDB service
  mongodb:
    image: mongo:latest
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=myusername
      - MONGO_INITDB_ROOT_PASSWORD=mypassword
    ports:
      - 27017:27017
    networks:
      - "ev"
    restart: unless-stopped

  # Kafka service
  redis:
    image: redis:latest
    container_name: "redis"
    environment:
      - REDIS_PORT=6379
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - "ev"

  # Microservices
  users:
    build: ./api-users
    container_name: "user-microservice"
    restart: always
    environment:
      - PASSWORD_SALT=10
      - JWT_SECRET=mysecret
      - DB_CONN_STRING=mongodb://myusername:mypassword@mongodb:27017
      - DB_NAME=users_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - "ev"
    depends_on:
      - redis

  products:
    build: ./api-product
    container_name: "products-microservice"
    restart: always
    environment:    
      - DB_CONN_STRING=mongodb://myusername:mypassword@mongodb:27017
      - DB_NAME=prodcuts_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ev
    depends_on:
      - redis

  inventory:
    build: ./api-inventory
    container_name: "inventory-microservice"
    restart: always
    environment:  
      - DB_CONN_STRING=mongodb://myusername:mypassword@mongodb:27017
      - DB_NAME=inventory_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ev
    depends_on:
      - redis

  order:
    build: ./api-orders
    container_name: "order-microservice"
    restart: always
    environment:
      - DB_CONN_STRING=mongodb://myusername:mypassword@mongodb:27017
      - DB_NAME=order_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ev
    depends_on:
      - redis

  payment:
    build: ./api-payment
    container_name: "payment-microservice"
    restart: always
    environment:
      - DB_CONN_STRING=mongodb://myusername:mypassword@mongodb:27017
      - DB_NAME=payments_db
      - REDIS_HOST=redis
      - REDIS_PORT=6379
    networks:
      - ev
    depends_on:
      - redis

  # Api gateway
  gateway:
    build: ./api-gateway
    container_name: "gateway"
    restart: always
    environment:
    - DOMAIN=mydomain
    - PORT=3000
    - API_PREFIX=api
    - API_VERSION=v1
    - JWT_SECRET=mysecret
    - ALGORITHM=HS256
    - REDIS_HOST=redis
    - REDIS_PORT=6379
    - USERS_MICROSERVICE_NAME=users-microservice
    - PRODUCT_MICROSERVICE_NAME=product-microservice
    - INVENTORY_MICROSERVICE_NAME=inventory-microservice
    - ORDER_MICROSERVICE_NAME=order-microservice
    - PAYMENT_MICROSERVICE_NAME=payment-microservice
    ports:
      - "3000:3000"
    networks:
      - ev
    depends_on:
      - redis
    hostname: gateway
