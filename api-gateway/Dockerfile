# Construction stage
FROM node:21.7.1-alpine AS build

WORKDIR /gateway

RUN npm install -g pnpm

COPY package*.json ./
RUN pnpm i

COPY . .

# app config development
ARG DOMAIN
ARG PORT
ARG API_PREFIX
ARG API_VERSION

# security
ARG JWT_SECRET
ARG ALGORITHM

# Microservices
ARG BROKER

# users microservice
ARG USERS_MICROSERVICE_NAME
ARG USERS_CLIENT_ID
ARG USERS_GROUP_ID

# product microservice
ARG PRODUCT_MICROSERVICE_NAME
ARG PRODUCT_CLIENT_ID
ARG PRODUCT_GROUP_ID

# inventory microservice
ARG INVENTORY_MICROSERVICE_NAME
ARG INVENTORY_CLIENT_ID
ARG INVENTORY_GROUP_ID

# inventory microservice
ARG ORDER_MICROSERVICE_NAME
ARG ORDER_CLIENT_ID
ARG ORDER_GROUP_ID

# payment microservice
ARG PAYMENT_MICROSERVICE_NAME
ARG PAYMENT_CLIENT_ID
ARG PAYMENT_GROUP_ID

ENV DOMAIN=$DOMAIN
ENV PORT=$PORT
ENV API_PREFIX=$API_PREFIX
ENV API_VERSION=$API_VERSION
ENV JWT_SECRET=$JWT_SECRET
ENV ALGORITHM=$ALGORITHM
ENV BROKER=$BROKER
ENV USERS_MICROSERVICE_NAME=$USERS_MICROSERVICE_NAME
ENV USERS_CLIENT_ID=$USERS_CLIENT_ID
ENV USERS_GROUP_ID=$USERS_GROUP_ID
ENV PRODUCT_MICROSERVICE_NAME=$PRODUCT_MICROSERVICE_NAME
ENV PRODUCT_CLIENT_ID=$PRODUCT_CLIENT_ID
ENV PRODUCT_GROUP_ID=$PRODUCT_GROUP_ID
ENV INVENTORY_MICROSERVICE_NAME=$INVENTORY_MICROSERVICE_NAME
ENV INVENTORY_CLIENT_ID=$INVENTORY_CLIENT_ID
ENV INVENTORY_GROUP_ID=$INVENTORY_GROUP_ID
ENV ORDER_MICROSERVICE_NAME=$ORDER_MICROSERVICE_NAME
ENV ORDER_CLIENT_ID=$ORDER_CLIENT_ID
ENV ORDER_GROUP_ID=$ORDER_GROUP_ID
ENV PAYMENT_MICROSERVICE_NAME=$PAYMENT_MICROSERVICE_NAME
ENV PAYMENT_CLIENT_ID=$PAYMENT_CLIENT_ID
ENV PAYMENT_GROUP_ID=$PAYMENT_GROUP_ID

RUN pnpm run build

# Final stage
FROM node:21.7.1-alpine

RUN apk add --no-cache tini

RUN npm install -g pnpm

WORKDIR /gateway

# Copy only the files compiled and needed to run the application.
COPY --from=build /gateway/dist ./dist
COPY --from=build /gateway/node_modules ./node_modules
COPY --from=build /gateway/package.json ./package.json
# COPY --from=build /gateway/.env ./.env

# app config development
ARG DOMAIN
ARG PORT
ARG API_PREFIX
ARG API_VERSION

# security
ARG JWT_SECRET
ARG ALGORITHM

# Microservices
ARG BROKER

# users microservice
ARG USERS_MICROSERVICE_NAME
ARG USERS_CLIENT_ID
ARG USERS_GROUP_ID

# product microservice
ARG PRODUCT_MICROSERVICE_NAME
ARG PRODUCT_CLIENT_ID
ARG PRODUCT_GROUP_ID

# inventory microservice
ARG INVENTORY_MICROSERVICE_NAME
ARG INVENTORY_CLIENT_ID
ARG INVENTORY_GROUP_ID

# inventory microservice
ARG ORDER_MICROSERVICE_NAME
ARG ORDER_CLIENT_ID
ARG ORDER_GROUP_ID

# payment microservice
ARG PAYMENT_MICROSERVICE_NAME
ARG PAYMENT_CLIENT_ID
ARG PAYMENT_GROUP_ID

ENV DOMAIN=$DOMAIN
ENV PORT=$PORT
ENV API_PREFIX=$API_PREFIX
ENV API_VERSION=$API_VERSION
ENV JWT_SECRET=$JWT_SECRET
ENV ALGORITHM=$ALGORITHM
ENV BROKER=$BROKER
ENV USERS_MICROSERVICE_NAME=$USERS_MICROSERVICE_NAME
ENV USERS_CLIENT_ID=$USERS_CLIENT_ID
ENV USERS_GROUP_ID=$USERS_GROUP_ID
ENV PRODUCT_MICROSERVICE_NAME=$PRODUCT_MICROSERVICE_NAME
ENV PRODUCT_CLIENT_ID=$PRODUCT_CLIENT_ID
ENV PRODUCT_GROUP_ID=$PRODUCT_GROUP_ID
ENV INVENTORY_MICROSERVICE_NAME=$INVENTORY_MICROSERVICE_NAME
ENV INVENTORY_CLIENT_ID=$INVENTORY_CLIENT_ID
ENV INVENTORY_GROUP_ID=$INVENTORY_GROUP_ID
ENV ORDER_MICROSERVICE_NAME=$ORDER_MICROSERVICE_NAME
ENV ORDER_CLIENT_ID=$ORDER_CLIENT_ID
ENV ORDER_GROUP_ID=$ORDER_GROUP_ID
ENV PAYMENT_MICROSERVICE_NAME=$PAYMENT_MICROSERVICE_NAME
ENV PAYMENT_CLIENT_ID=$PAYMENT_CLIENT_ID
ENV PAYMENT_GROUP_ID=$PAYMENT_GROUP_ID

ENTRYPOINT ["/sbin/tini", "--"]

EXPOSE ${PORT:-3000}

CMD [ "pnpm", "run", "start:prod" ]